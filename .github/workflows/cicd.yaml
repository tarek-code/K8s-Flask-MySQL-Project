name: Run Pytest and Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r k8s/base/flaskapp/tests/requirements-tests.txt

      - name: Lint with flake8 and reviewdog
        uses: reviewdog/action-flake8@v3
        with:
          args: "k8s/base/flaskapp/app.py"
          reporter: github-pr-review
          fail_on_error: false
          level: warning
      
      - name: Lint SQL with sqlfluff
        run: |
          sqlfluff lint --dialect mysql k8s/base/database/init.sql || true

      - name: Run pytest
        run: |
          export PYTHONPATH=$(pwd)
          pytest k8s/base/flaskapp/tests/test_app.py

      - name: Run tests and generate coverage report
        run: |
          export PYTHONPATH=$(pwd)
          coverage run -m pytest k8s/base/flaskapp/tests/test_app.py
          coverage report --fail-under=80
         


      - name: Log in to Docker Hub
        if: contains(github.event.head_commit.message, '[build-image]')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tags from commit message
        if: contains(github.event.head_commit.message, '[build-image]')
        id: tags
        run: |
          msg="${{ github.event.head_commit.message }}"
          flask_tag=$(echo "$msg" | grep -oP 'flask:v[0-9]+' | cut -d':' -f2)
          db_tag=$(echo "$msg" | grep -oP 'db:v[0-9]+' | cut -d':' -f2)
          echo "flask_tag=$flask_tag" >> $GITHUB_OUTPUT
          echo "db_tag=$db_tag" >> $GITHUB_OUTPUT

      - name: Build & Push FlaskApp
        if: contains(github.event.head_commit.message, '[build-image]')
        run: |
          docker build -t tarekadel/k8s-flask-mysql-flaskapp:${{ steps.tags.outputs.flask_tag }} k8s/base/flaskapp
          docker push tarekadel/k8s-flask-mysql-flaskapp:${{ steps.tags.outputs.flask_tag }}

      - name: Build & Push MySQL
        if: contains(github.event.head_commit.message, '[build-image]')
        run: |
          docker build -t tarekadel/k8s-flask-mysql-database:${{ steps.tags.outputs.db_tag }} k8s/base/database
          docker push tarekadel/k8s-flask-mysql-database:${{ steps.tags.outputs.db_tag }}
      - name: Update production manifests with new image tags
        if: contains(github.event.head_commit.message, '[build-image]')
        run: |
          echo "Updating production manifests with new tags..."
          sed -i "s|image: tarekadel/k8s-flask-mysql-flaskapp:.*|image: tarekadel/k8s-flask-mysql-flaskapp:${{ steps.tags.outputs.flask_tag }}|g" k8s/overlays/production/flask-deployment-prod.yaml
          sed -i "s|image: tarekadel/k8s-flask-mysql-database:.*|image: tarekadel/k8s-flask-mysql-database:${{ steps.tags.outputs.db_tag }}|g" k8s/overlays/production/mysql-statefulset-prod.yaml

      - name: Commit & Push changes
        if: contains(github.event.head_commit.message, '[build-image]')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "tarek-code"
          git config user.email "tarekadel314@gmail.com"
          git add k8s/overlays/production/flask-deployment-prod.yaml k8s/overlays/production/mysql-statefulset-prod.yaml
          git commit -m "Update prod images to v${{ steps.tags.outputs.flask_tag }} and v${{ steps.tags.outputs.db_tag }}"
          git push


